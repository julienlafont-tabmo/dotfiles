<application>
  <component name="FindRecents">
    <findStrings>
      <find>be a</find>
      <find>?storageDeviceId</find>
      <find>bucked</find>
      <find>ConsistentHashingRoutingLogic</find>
      <find>Routing</find>
      <find>Path</find>
      <find>NameReceptacle</find>
      <find>println</find>
      <find>countByOrderAndInDiffusion</find>
      <find>applicationLifecycle</find>
      <find>future</find>
      <find>Future</find>
      <find>StrictLogg</find>
      <find>kafkaDeviceEventSink</find>
      <find>segme</find>
      <find>aggregatesBySegmentId</find>
      <find>segmentService</find>
      <find>berserk-skill</find>
      <find>httpClient</find>
      <find>Json.obj</find>
      <find>filterByDateRange</find>
      <find>conversion</find>
      <find>api.host</find>
      <find>/internal/</find>
      <find>error.deviceUUID.not.supported.by.typ</find>
      <find>trace</find>
      <find>print</find>
      <find>t.</find>
      <find>(Trainer, Fight)</find>
      <find>getOrganizationAndPlatform</find>
    </findStrings>
    <replaceStrings>
      <replace>jsonFormat$1($2)</replace>
      <replace>Format</replace>
      <replace>fields.get(&quot;$1&quot;).map(_.convertTo[$2])</replace>
      <replace>None</replace>
      <replace>Some(from)</replace>
      <replace>MonthYear</replace>
      <replace>&lt;br /&gt;</replace>
      <replace>mergeOrderAndLineTargeting(order</replace>
      <replace>endpoint</replace>
      <replace>.parse(&quot;&quot;)</replace>
      <replace>UUIDGen.zero</replace>
      <replace>stub[</replace>
      <replace>stub</replace>
      <replace>returns</replace>
      <replace>*</replace>
      <replace>(lineStatsService.fetchCounters _).when</replace>
      <replace>====</replace>
      <replace>List[(String, (Option[Long], List[(String,Long)], List[(String, String)]))]</replace>
      <replace>manager-api.dev.tabmo.net</replace>
      <replace>import common.models.BusinessWrites</replace>
      <replace>disallow</replace>
      <replace>cats.data.NonEmptyList</replace>
      <replace>NonEmptySeq</replace>
      <replace>NonEmptyList</replace>
      <replace>toJson(</replace>
      <replace>field.validation</replace>
      <replace>field.validate</replace>
      <replace>env.</replace>
      <replace>?$deviceIdP</replace>
      <replace>FightCtx</replace>
    </replaceStrings>
    <dirStrings>
      <dir>$USER_HOME$/work/projects/manager-api/modules/core/src/main/scala/utils</dir>
      <dir>$USER_HOME$/work/projects/manager-api/modules/order</dir>
      <dir>$USER_HOME$/work/projects/manager-api/doc/source/includes</dir>
      <dir>$USER_HOME$/work/projects/manager-api/modules/shared/app</dir>
      <dir>$USER_HOME$/work/projects/manager-api/modules/entities/src/main/scala/schemas</dir>
      <dir>$USER_HOME$/work/projects/manager-api/</dir>
      <dir>$USER_HOME$/work/projects/manager-api/modules/user/app/daos</dir>
      <dir>$USER_HOME$/work/projects/manager-api/modules/user/app</dir>
      <dir>$USER_HOME$/work/projects/manager-api/modules/order/app/daos/slick</dir>
      <dir>$USER_HOME$/work/projects/manager-api/modules/order/app/daos</dir>
      <dir>$USER_HOME$/work/projects/manager-api/modules</dir>
      <dir>$USER_HOME$/work/projects/manager-api/modules/core/src/test</dir>
      <dir>$USER_HOME$/work/projects/manager-api/test</dir>
      <dir>$USER_HOME$/work/projects/ReactiveAerospike</dir>
      <dir>$USER_HOME$/work/projects/manager-api/modules/stats/</dir>
      <dir>$USER_HOME$/work/projects/rubicon-daily-report/src/main/scala</dir>
      <dir>$USER_HOME$/work/projects/manager-api/scripts</dir>
      <dir>$USER_HOME$/work/projects/manager-api/modules/stats/app/controllers</dir>
      <dir>$USER_HOME$/work/projects/manager-api/modules/user</dir>
      <dir>$USER_HOME$/work/projects/manager-api/test/api/shared</dir>
      <dir>$USER_HOME$/work/projects/manager-api/test/api/order</dir>
      <dir>$USER_HOME$/work/projects/manager-api/test/</dir>
      <dir>$USER_HOME$/work/projects/json-benchmark/src/main/scala/models/bidrequest</dir>
      <dir>$USER_HOME$/work/projects/json-benchmark/src/main/scala/models</dir>
      <dir>$USER_HOME$/work/projects/manager-api/conf/evolutions/default</dir>
      <dir>$USER_HOME$/work/projects/middleware-api</dir>
      <dir>$USER_HOME$/work/projects/manager-api/doc</dir>
      <dir>$USER_HOME$/work/projects/manager-api/modules/order/app/controllers/internal</dir>
      <dir>$USER_HOME$/work/projects/manager-api</dir>
    </dirStrings>
  </component>
</application>